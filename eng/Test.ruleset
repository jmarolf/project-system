<?xml version="1.0" encoding="utf-8"?>
<RuleSet Name="Common diagnostic rules for all non-shipping projects" Description="Enables/disable rules specific to all non-shipping projects." ToolsVersion="14.0">
  <Include Path=".\Default.ruleset" Action="Default" />
  <Rules AnalyzerId="Microsoft.CodeQuality.Analyzers" RuleNamespace="Microsoft.CodeQuality.Analyzers">
    <!-- For tests, the ConfigureAwait(true) is good enough. Either they are already running on a thread pool
         thread where ConfigureAwait(false) does nothing, or we're running the workload from an STA thread
         where we want to marshal the continuations back to it. -->
    <Rule Id="CA2007" Action="None" />
    <Rule Id="CA1822" Action="None" />
    <Rule Id="CA2000" Action="None" />
    <Rule Id="CA2009" Action="None" />
  </Rules>
  <Rules AnalyzerId="System.Runtime.Analyzers" RuleNamespace="System.Runtime.Analyzers">
    <!-- Avoid zero length allocations - suppress for non-shipping/test projects (originally RS0007) -->
    <Rule Id="CA1825" Action="None" />
  </Rules>
  <Rules AnalyzerId="Microsoft.Composition.Analyzers" RuleNamespace="Microsoft.Composition.Analyzers">
    <Rule Id="RS0006" Action="None" />
    <Rule Id="RS0023" Action="None" />
  </Rules>
   <Rules AnalyzerId="Microsoft.CodeAnalysis.CSharp.Features" RuleNamespace="Microsoft.CodeAnalysis.CSharp.Features">
    <!-- Too noisy due to https://github.com/dotnet/roslyn/issues/27819 -->
    <Rule Id="IDE0001" Action="None" />                       <!-- Simplify names                               System.Version version;                             Version version;                      -->

     <!-- Naming styles is too noisy as it fires on all async tests -->     
    <Rule Id="IDE1006" Action="None" />                       <!-- Naming styles                                Task Open()                                         Task OpenAsync()                      -->
    <Rule Id="IDE1006WithoutSuggestion" Action="None" />
  </Rules>
  <Rules AnalyzerId="Microsoft.VisualStudio.Threading.Analyzers" RuleNamespace="Microsoft.VisualStudio.Threading.Analyzers">
    <Rule Id="VSTHRD001" Action="None" />                     <!-- Await JoinableTaskFactory.SwitchToMainThreadAsync() to switch to the UI thread instead of APIs that can deadlock or require specifying a priority.-->
    <Rule Id="VSTHRD002" Action="None" />                     <!-- Synchronously waiting on tasks or awaiters may cause deadlocks. Use JoinableTaskFactory.Run instead.-->
    <Rule Id="VSTHRD010" Action="None" />                     <!-- Visual Studio service should be used on main thread explicitly.-->
    <Rule Id="VSTHRD103" Action="None" />                     <!-- Synchronously blocks. Await ThrowsAsync instead.-->
    <Rule Id="VSTHRD110" Action="None" />                     <!-- Observe result of async calls -->
    <Rule Id="VSTHRD200" Action="None" />                     <!-- Naming styles                                Task Open()                                         Task OpenAsync()                      -->
  </Rules>
  <Rules AnalyzerId="xunit.analyzers" RuleNamespace="xunit.analyzers">
    <Rule Id="xUnit1026" Action="None" /> <!-- Theory methods must use all parameters -->
    <Rule Id="xUnit1004" Action="None" /> <!-- Test methods should not be skipped -->
  </Rules>
</RuleSet>
